name: CI/CD Pipeline with Docker Compose and Docker Hub

on:
  push:
    branches:
      - develop
      - staging
      - main
      - feature/*
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker images (Django & Nginx)
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }} .
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-django:${{ github.sha }}

  deploy_staging:
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to EC2 Staging
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.STAGING_SERVER_IP }} << 'EOF'
        docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"
        docker-compose --env-file .env.staging pull
        docker-compose --env-file .env.staging up -d
        EOF

  deploy_production:
    if: github.ref == 'refs/heads/main'
    needs: deploy_staging
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to EC2 Production
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} << 'EOF'
        docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"
        docker-compose --env-file .env.prod pull
        docker-compose --env-file .env.prod up -d
        EOF